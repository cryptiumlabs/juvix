name:                juvix
version:             0.0.0.0
github:              "cryptiumlabs/juvix"
license:             GPL-3
homepage:            https://github.com/cryptiumlabs/juvix#readme
synopsis:            Juvix smart contract language compiler, debugging toolkit, & stateful deployment system
category:            Web3
description:         Please see the README on GitHub at <https://github.com/cryptiumlabs/juvix#readme>
author:              Cryptium Labs
maintainer:          cwgoes@cryptium.ch, jeremy@cryptium.ch, marty@cryptium.ch, andy@cryptium.ch
copyright:           2018 Christopher Goes, 2018-2019 Cryptium Labs

extra-source-files:
- README.md

dependencies:
  - base >= 4.11 && < 5
  - directory
  - lens
  - Cabal
  - extensible-data
  - capability >= 0.2.0.0
  - syb
  ###########################
  # Libraries
  ###########################
  - standard-library
  - frontend
  - core
  - translate
  - michelson
  # - llvm
  # - interaction-net
  # - arithmetic-circuit
  # - InteractionNetIR
  ###########################
  # Dependency for OS
  ###########################
  - turtle
  - time
  - filepath
  ###########################
  # Dependency for Structs
  ###########################
  - text
  - mtl
  - containers
  - unordered-containers
  - hashable
  - fgl
  - fgl-visualize
  - bytestring

  ###########################
  # Dependency for Morley
  ###########################
  - morley


default-extensions:
  - NoImplicitPrelude
  - OverloadedStrings
  - NoMonomorphismRestriction
  - RankNTypes
  - LambdaCase
  - UnicodeSyntax
  - GADTs
  - ScopedTypeVariables
  - DeriveDataTypeable
  - DeriveGeneric
  - DerivingStrategies
  - FlexibleContexts
  - FlexibleInstances
  - DataKinds
  - GeneralizedNewtypeDeriving
  - DefaultSignatures
  - QuasiQuotes
  - TypeOperators
  - MultiParamTypeClasses
  - MultiWayIf
  - TypeInType
  - DerivingVia
  - TypeApplications
  - StandaloneDeriving
  - FunctionalDependencies
  - PatternSynonyms
  - TypeFamilies
  - ConstraintKinds
  - EmptyDataDeriving
  - TemplateHaskell
  - NamedFieldPuns
  - DisambiguateRecordFields
  - TupleSections
  - BlockArguments

ghc-options:
  - -ferror-spans
  - -Wall
  - -fno-warn-orphans
  - -fno-warn-name-shadowing
  - -fno-warn-missing-pattern-synonym-signatures
  - -j
  - -static
  - -fwrite-ide-info

when:
  condition: flag(incomplete-error)
  ghc-options:
    - -Werror=incomplete-patterns
    - -Werror=missing-fields
    - -Werror=missing-methods

flags:
  incomplete-error:
    description: >
      Incomplete patterns, missing record fields, and missing class methods are
      an error
    manual: true
    default: false

library:
  source-dirs: src
  dependencies:
    - derive-storable
    - derive-storable-plugin
    - jsonschema-gen
  exposed-modules:
    - Juvix
    - Juvix.Pipeline
    - Juvix.Core
    - Juvix.Core.Pipeline
    - Juvix.Core.FromFrontend
    - Juvix.Encoding.Encoding
    - Juvix.Encoding.Mendler
    - Juvix.Encoding.Scott
    - Juvix.Encoding.Types
    - Juvix.Backends

executables:
  juvix:
    source-dirs:      app
    main:             Main.hs
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - juvix
      - optparse-applicative
      - ansi-wl-pprint
      - raw-strings-qq
      - yaml
      - aeson
      - haskeline
      - gitrev

tests:
  juvix-test:
    main:         Main.hs
    source-dirs:  test
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - juvix
      - tasty
      - tasty-hunit
      - tasty-silver
      - tasty-quickcheck
      - parsec

benchmarks:
  juvix-bench:
    main:         Main.hs
    source-dirs:  bench
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - juvix
      - criterion
      - attoparsec
