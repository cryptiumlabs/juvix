Rec
    { recordContents = T
        { public = fromList
            [
                ( "make-pair"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->"
                                ( "list" "operation" )
                                ( ":infix" "->" "nat"
                                    ( "pair"
                                        ( ":paren"
                                            ( "list" "operation" ) ) "nat" ) ) )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.pair" ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "+"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->" "nat"
                                ( ":infix" "->" "nat" "nat" ) )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.add" ) ) )
                        , defPrecedence = Pred Left 5 } ) )
            ,
                ( "main"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->"
                                ( "pair" "nat" "nat" )
                                ( "pair"
                                    ( ":paren"
                                        ( "list" "operation" ) ) "nat" ) )
                        , defTerm =
                            ( ":lambda-case"
                                ( ()
                                    ( ":lambda" ( "_" )
                                        ( "make-pair" "nil"
                                            ( ":paren"
                                                ( "g"
                                                    ( ":paren"
                                                        ( "P" 3 4 ) ) ) ) ) ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "nil"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( "list" "operation" )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.nil" ) ) )
                        , defPrecedence = Pred Left 9 } ) ) ]
        , private = fromList [] }
    , recordMTy = Nothing
    , recordOpenList = []
    , recordQualifiedMap = map }