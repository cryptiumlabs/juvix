Rec
    { recordContents = T
        { public = fromList
            [
                ( "default"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->" "nat"
                                ( ":infix" "->" "storage" "storage" ) )
                        , defTerm =
                            ( ":lambda-case"
                                (
                                    ( "addnat" "storage" )
                                    ( "pair"
                                        ( ":paren" ( "add-storage" "storage" ) )
                                        ( ":paren"
                                            ( "foo" "input" "storage" ) ) ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( ":record-d"
                , SumCon
                    ( Sum { sumTDef = Nothing, sumTName = "Storage" } ) )
            ,
                ( "foo"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->" "nat"
                                ( ":infix" "->" "storage" "storage" ) )
                        , defTerm =
                            ( ":lambda-case"
                                (
                                    ( "va"
                                        ( ":record-no-pun" "value" "value" "valu" "valu" ) )
                                    ( ":record-no-pun" "value"
                                        ( "add" "valu" "va" ) "valu"
                                        ( "add" "value" "va" ) ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "Storage"
                , TypeDeclar
                    { definitionRepr =
                        ( "Storage" ()
                            ( ":record-d" "value" "nat" "valu" "nat" ) ) } )
            ,
                ( "add-storage"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->" "storage" "nat" )
                        , defTerm =
                            ( ":lambda-case"
                                (
                                    (
                                        ( ":record-no-pun" "value" "value" "valu" "valu" ) )
                                    ( "add" "value" "valu" ) ) )
                        , defPrecedence = Pred Left 9 } ) ) ]
        , private = fromList [] }
    , recordMTy = Nothing
    , recordOpenList = []
    , recordQualifiedMap = map }