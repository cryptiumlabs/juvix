Rec
    { recordContents = T
        { public = fromList
            [
                ( "make-pair"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->"
                                ( "list" "operation" )
                                ( ":infix" "->" "unit-t"
                                    ( "pair"
                                        ( ":paren"
                                            ( "list" "operation" ) ) "unit-t" ) ) )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.pair" ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "main"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->"
                                ( "pair" "unit-t" "unit-t" )
                                ( "pair"
                                    ( ":paren"
                                        ( "list" "operation" ) ) "unit-t" ) )
                        , defTerm =
                            ( ":lambda-case"
                                ( ()
                                    ( ":lambda" ( "ps" )
                                        ( "make-pair" "nil"
                                            ( ":paren" ( "car" "ps" ) ) ) ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "car"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( ":infix" "->"
                                ( "pair" "unit-t" "unit-t" ) "unit-t" )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.car" ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "nil"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( "list" "operation" )
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.nil" ) ) )
                        , defPrecedence = Pred Left 9 } ) ) ]
        , private = fromList [] }
    , recordMTy = Nothing
    , recordOpenList = []
    , recordQualifiedMap = map }