Right
    ( Header
        ( "Transfer" :| [] )
        [ ModuleOpen
            ( Open
                ( "Prelude" :| [] )
            )
        , ModuleOpen
            ( Open
                ( "Michelson" :| [] )
            )
        , Signature
            ( Sig
                { signatureName = "make-pair"
                , signatureUsage = Nothing
                , signatureArrowType = Infix
                    ( Inf
                        { infixLeft = Application
                            ( App
                                { applicationName = Name
                                    ( "list" :| [] )
                                , applicationArgs = Name
                                    ( "operation" :| [] ) :| []
                                }
                            )
                        , infixOp = "->" :| []
                        , infixRight = Infix
                            ( Inf
                                { infixLeft = Name
                                    ( "nat" :| [] )
                                , infixOp = "->" :| []
                                , infixRight = Application
                                    ( App
                                        { applicationName = Name
                                            ( "pair" :| [] )
                                        , applicationArgs = Parened
                                            ( Application
                                                ( App
                                                    { applicationName = Name
                                                        ( "list" :| [] )
                                                    , applicationArgs = Name
                                                        ( "operation" :| [] ) :| []
                                                    }
                                                )
                                            ) :|
                                            [ Name
                                                ( "nat" :| [] )
                                            ]
                                        }
                                    )
                                }
                            )
                        }
                    )
                , signatureConstraints = []
                }
            )
        , Function
            ( Func
                ( Like
                    { functionLikedName = "make-pair"
                    , functionLikeArgs = []
                    , functionLikeBody = Body
                        ( Primitive
                            ( Prim
                                ( "Michelson" :| [ "pair" ] )
                            )
                        )
                    }
                )
            )
        , Signature
            ( Sig
                { signatureName = "nil"
                , signatureUsage = Nothing
                , signatureArrowType = Application
                    ( App
                        { applicationName = Name
                            ( "list" :| [] )
                        , applicationArgs = Name
                            ( "operation" :| [] ) :| []
                        }
                    )
                , signatureConstraints = []
                }
            )
        , Function
            ( Func
                ( Like
                    { functionLikedName = "nil"
                    , functionLikeArgs = []
                    , functionLikeBody = Body
                        ( Primitive
                            ( Prim
                                ( "Michelson" :| [ "nil" ] )
                            )
                        )
                    }
                )
            )
        , Signature
            ( Sig
                { signatureName = "address-to-contract"
                , signatureUsage = Nothing
                , signatureArrowType = Infix
                    ( Inf
                        { infixLeft = Name
                            ( "address" :| [] )
                        , infixOp = "->" :| []
                        , infixRight = Application
                            ( App
                                { applicationName = Name
                                    ( "option" :| [] )
                                , applicationArgs = Parened
                                    ( Application
                                        ( App
                                            { applicationName = Name
                                                ( "contract" :| [] )
                                            , applicationArgs = Name
                                                ( "unit-t" :| [] ) :| []
                                            }
                                        )
                                    ) :| []
                                }
                            )
                        }
                    )
                , signatureConstraints = []
                }
            )
        , Function
            ( Func
                ( Like
                    { functionLikedName = "address-to-contract"
                    , functionLikeArgs = []
                    , functionLikeBody = Body
                        ( Primitive
                            ( Prim
                                ( "Michelson" :| [ "address-to-contract" ] )
                            )
                        )
                    }
                )
            )
        , Signature
            ( Sig
                { signatureName = "transfer-tokens"
                , signatureUsage = Nothing
                , signatureArrowType = Infix
                    ( Inf
                        { infixLeft = Name
                            ( "unit-t" :| [] )
                        , infixOp = "->" :| []
                        , infixRight = Infix
                            ( Inf
                                { infixLeft = Name
                                    ( "mutez" :| [] )
                                , infixOp = "->" :| []
                                , infixRight = Infix
                                    ( Inf
                                        { infixLeft = Application
                                            ( App
                                                { applicationName = Name
                                                    ( "contract" :| [] )
                                                , applicationArgs = Name
                                                    ( "unit-t" :| [] ) :| []
                                                }
                                            )
                                        , infixOp = "->" :| []
                                        , infixRight = Name
                                            ( "operation" :| [] )
                                        }
                                    )
                                }
                            )
                        }
                    )
                , signatureConstraints = []
                }
            )
        , Function
            ( Func
                ( Like
                    { functionLikedName = "transfer-tokens"
                    , functionLikeArgs = []
                    , functionLikeBody = Body
                        ( Primitive
                            ( Prim
                                ( "Michelson" :| [ "transfer-tokens" ] )
                            )
                        )
                    }
                )
            )
        , Signature
            ( Sig
                { signatureName = "if-none"
                , signatureUsage = Nothing
                , signatureArrowType = Infix
                    ( Inf
                        { infixLeft = Application
                            ( App
                                { applicationName = Name
                                    ( "option" :| [] )
                                , applicationArgs = Parened
                                    ( Application
                                        ( App
                                            { applicationName = Name
                                                ( "contract" :| [] )
                                            , applicationArgs = Name
                                                ( "unit-t" :| [] ) :| []
                                            }
                                        )
                                    ) :| []
                                }
                            )
                        , infixOp = "->" :| []
                        , infixRight = Infix
                            ( Inf
                                { infixLeft = Application
                                    ( App
                                        { applicationName = Name
                                            ( "pair" :| [] )
                                        , applicationArgs = Parened
                                            ( Application
                                                ( App
                                                    { applicationName = Name
                                                        ( "list" :| [] )
                                                    , applicationArgs = Name
                                                        ( "operation" :| [] ) :| []
                                                    }
                                                )
                                            ) :|
                                            [ Name
                                                ( "unit-t" :| [] )
                                            ]
                                        }
                                    )
                                , infixOp = "->" :| []
                                , infixRight = Infix
                                    ( Inf
                                        { infixLeft = Parened
                                            ( Infix
                                                ( Inf
                                                    { infixLeft = Parened
                                                        ( Application
                                                            ( App
                                                                { applicationName = Name
                                                                    ( "contract" :| [] )
                                                                , applicationArgs = Name
                                                                    ( "unit-t" :| [] ) :| []
                                                                }
                                                            )
                                                        )
                                                    , infixOp = "->" :| []
                                                    , infixRight = Application
                                                        ( App
                                                            { applicationName = Name
                                                                ( "pair" :| [] )
                                                            , applicationArgs = Parened
                                                                ( Application
                                                                    ( App
                                                                        { applicationName = Name
                                                                            ( "list" :| [] )
                                                                        , applicationArgs = Name
                                                                            ( "operation" :| [] ) :| []
                                                                        }
                                                                    )
                                                                ) :|
                                                                [ Name
                                                                    ( "unit-t" :| [] )
                                                                ]
                                                            }
                                                        )
                                                    }
                                                )
                                            )
                                        , infixOp = "->" :| []
                                        , infixRight = Application
                                            ( App
                                                { applicationName = Name
                                                    ( "pair" :| [] )
                                                , applicationArgs = Parened
                                                    ( Application
                                                        ( App
                                                            { applicationName = Name
                                                                ( "list" :| [] )
                                                            , applicationArgs = Name
                                                                ( "operation" :| [] ) :| []
                                                            }
                                                        )
                                                    ) :|
                                                    [ Name
                                                        ( "unit-t" :| [] )
                                                    ]
                                                }
                                            )
                                        }
                                    )
                                }
                            )
                        }
                    )
                , signatureConstraints = []
                }
            )
        , Function
            ( Func
                ( Like
                    { functionLikedName = "if-none"
                    , functionLikeArgs = []
                    , functionLikeBody = Body
                        ( Primitive
                            ( Prim
                                ( "Michelson" :| [ "if-none" ] )
                            )
                        )
                    }
                )
            )
        , Signature
            ( Sig
                { signatureName = "main"
                , signatureUsage = Nothing
                , signatureArrowType = Infix
                    ( Inf
                        { infixLeft = Application
                            ( App
                                { applicationName = Name
                                    ( "pair" :| [] )
                                , applicationArgs = Name
                                    ( "unit-t" :| [] ) :|
                                    [ Name
                                        ( "unit-t" :| [] )
                                    ]
                                }
                            )
                        , infixOp = "->" :| []
                        , infixRight = Application
                            ( App
                                { applicationName = Name
                                    ( "pair" :| [] )
                                , applicationArgs = Parened
                                    ( Application
                                        ( App
                                            { applicationName = Name
                                                ( "list" :| [] )
                                            , applicationArgs = Name
                                                ( "operation" :| [] ) :| []
                                            }
                                        )
                                    ) :|
                                    [ Name
                                        ( "unit-t" :| [] )
                                    ]
                                }
                            )
                        }
                    )
                , signatureConstraints = []
                }
            )
        , Function
            ( Func
                ( Like
                    { functionLikedName = "main"
                    , functionLikeArgs = []
                    , functionLikeBody = Body
                        ( Lambda
                            ( Lamb
                                { lambdaArgs = MatchLogic
                                    { matchLogicContents = MatchName "ps"
                                    , matchLogicNamed = Nothing
                                    } :| []
                                , lambdaBody = Let
                                    ( Let''
                                        { letBindings = Like
                                            { functionLikedName = "contract"
                                            , functionLikeArgs = []
                                            , functionLikeBody = Body
                                                ( Application
                                                    ( App
                                                        { applicationName = Name
                                                            ( "address-to-contract" :| [] )
                                                        , applicationArgs = Name
                                                            ( "sender" :| [] ) :| []
                                                        }
                                                    )
                                                )
                                            }
                                        , letBody = Application
                                            ( App
                                                { applicationName = Name
                                                    ( "if-none" :| [] )
                                                , applicationArgs = Name
                                                    ( "contract" :| [] ) :|
                                                    [ Parened
                                                        ( Application
                                                            ( App
                                                                { applicationName = Name
                                                                    ( "make-pair" :| [] )
                                                                , applicationArgs = Name
                                                                    ( "nil" :| [] ) :|
                                                                    [ Name
                                                                        ( "unit" :| [] )
                                                                    ]
                                                                }
                                                            )
                                                        )
                                                    , Parened
                                                        ( Lambda
                                                            ( Lamb
                                                                { lambdaArgs = MatchLogic
                                                                    { matchLogicContents = MatchName "contract"
                                                                    , matchLogicNamed = Nothing
                                                                    } :| []
                                                                , lambdaBody = Let
                                                                    ( Let''
                                                                        { letBindings = Like
                                                                            { functionLikedName = "op"
                                                                            , functionLikeArgs = []
                                                                            , functionLikeBody = Body
                                                                                ( Application
                                                                                    ( App
                                                                                        { applicationName = Name
                                                                                            ( "transfer-tokens" :| [] )
                                                                                        , applicationArgs = Name
                                                                                            ( "unit" :| [] ) :|
                                                                                            [ Name
                                                                                                ( "balance" :| [] )
                                                                                            , Name
                                                                                                ( "contract" :| [] )
                                                                                            ]
                                                                                        }
                                                                                    )
                                                                                )
                                                                            }
                                                                        , letBody = Application
                                                                            ( App
                                                                                { applicationName = Name
                                                                                    ( "make-pair" :| [] )
                                                                                , applicationArgs = Parened
                                                                                    ( Application
                                                                                        ( App
                                                                                            { applicationName = Name
                                                                                                ( "cons" :| [] )
                                                                                            , applicationArgs = Name
                                                                                                ( "op" :| [] ) :|
                                                                                                [ Name
                                                                                                    ( "nil" :| [] )
                                                                                                ]
                                                                                            }
                                                                                        )
                                                                                    ) :|
                                                                                    [ Name
                                                                                        ( "unit" :| [] )
                                                                                    ]
                                                                                }
                                                                            )
                                                                        }
                                                                    )
                                                                }
                                                            )
                                                        )
                                                    ]
                                                }
                                            )
                                        }
                                    )
                                }
                            )
                        )
                    }
                )
            )
        ]
    )