Rec
    { recordContents = T
        { public = fromList
            [
                ( "string"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Nothing
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.string" ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "default"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just
                            ( "TopLevel.Prelude.->" "string"
                                ( "TopLevel.Prelude.->" "storage" "storage" ) )
                        , defTerm =
                            ( ":lambda-case"
                                (
                                    ( "para" "storage" )
                                    ( "pair" ( ":list" ) "storage" ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "init-storage"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Just "storage"
                        , defTerm =
                            ( ":lambda-case" ( () "unit" ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "storage"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Nothing
                        , defTerm =
                            ( ":lambda-case" ( () "unit" ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "pair"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Nothing
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Michelson.pair" ) ) )
                        , defPrecedence = Pred Left 9 } ) )
            ,
                ( "unit"
                , Def
                    ( D
                        { defUsage = Nothing
                        , defMTy = Nothing
                        , defTerm =
                            ( ":lambda-case"
                                ( () ( ":primitive" "Param.unit" ) ) )
                        , defPrecedence = Pred Left 9 } ) ) ]
        , private = fromList [] }
    , recordMTy = Nothing
    , recordOpenList = []
    , recordQualifiedMap = map }