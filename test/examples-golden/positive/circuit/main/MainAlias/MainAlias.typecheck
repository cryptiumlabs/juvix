Ann
    { usage = Omega
    , type' = Pi Omega ( PrimTy PField ) ( PrimTy PField )
    , term = LamM
        { capture =
            [ "MainAlias" :| [ "+" ] ]
        , arguments =
            [ "0" :| [] ]
        , body = Ann
            { usage = Omega
            , type' = PrimTy PField
            , term = AppM
                ( Ann
                    { usage = Omega
                    , type' = Pi Omega ( PrimTy PField )
                        ( Pi Omega ( PrimTy PField ) ( PrimTy PField ) )
                    , term = Var
                        ( "MainAlias" :| [ "+" ] )
                    }
                )
                [ Ann
                    { usage = Omega
                    , type' = PrimTy PField
                    , term = Var
                        ( "0" :| [] )
                    }
                , Ann
                    { usage = Omega
                    , type' = PrimTy PField
                    , term = Prim
                        ( Return
                            { retType = PrimType
                                { getPrimType = PField :| [] }
                            , retTerm = PConst
                                ( P
                                    ( 3 `modulo` 52435875175126190479447740508185965837690552500527637822603658699938581184513 )
                                )
                            }
                        )
                    }
                ]
            }
        }
    }