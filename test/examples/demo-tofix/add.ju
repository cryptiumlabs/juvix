mod Add where

open Prelude
open Michelson

sig make-pair : list operation -> nat -> pair (list operation) nat
let make-pair = %Michelson.pair

sig nil : list operation
let nil = %Michelson.nil

sig add : nat -> nat -> nat
let add = %Michelson.add

sig car : pair nat nat -> nat
let car = %Michelson.car

sig cdr : pair nat nat -> nat
let cdr = %Michelson.cdr

sig main : pair nat nat -> pair (list operation) nat
let main = \ps -> make-pair nil (add (car ps) (cdr ps))
