mod Swap where

open Prelude
open Michelson

sig make-pair : list operation -> nat -> pair (list operation) nat
let make-pair = %Michelson.pair

sig nil : list operation
let nil = %Michelson.nil

sig add : nat -> nat -> nat
let add = %Michelson.add

sig car : pair nat nat -> nat
let car = %Michelson.car

sig cdr : pair nat nat -> nat
let cdr = %Michelson.cdr

sig cdr2 : pair unit-t (pair nat nat) -> pair nat nat
let cdr2 = %Michelson.cdr

sig main : pair unit-t (pair nat nat) -> pair (list operation) (pair nat nat)
let main = \ps -> make-pair nil (make-pair (cdr (cdr2 ps)) (car (cdr2 ps)))
