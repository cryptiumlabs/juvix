let ty_ = %Builtin.Type

sig ty : ty_ 1
let ty = ty_ 0

let omega = %Builtin.Omega
let arr = %Builtin.Arrow

let (->) = arr omega
declare infixr (->) 1

let arrow = arr omega

let (:) = %Builtin.Colon
declare infixr (:) 2

sig int : ty
let int = %Michelson.int

let pair = %Builtin.Pair

sig list : ty -> ty
let list = %Michelson.list

sig operation : ty
let operation = %Michelson.operation

sig nil : ty
let nil = %Michelson.nil

sig main : int -> int -> pair 1 int (list operation)
let main = \param storage -> (param, ((%Michelson.nil) : list operation))
