let ty_ = %Builtin.Type

sig ty : ty_ 1
let ty = ty_ 0

let omega = %Builtin.Omega
let arr = %Builtin.Arrow

let (->) = arr omega
declare infixr (->) 1

let arrow = arr omega

let (:) = %Builtin.Colon
declare infixr (:) 2

sig int : ty
let int = %Michelson.int

sig pair : ty -> ty -> ty
let pair = %Michelson.pair

sig cons : int -> int -> pair int int
let cons = %Michelson.cons

sig list : ty -> ty
let list = %Michelson.list

sig operation : ty
let operation = %Michelson.operation

sig main : int -> int -> pair int int
let main = \param storage -> cons param storage
